file3<-readRDS("./elab/news/news4-Grams_final.gzip")
final <- rbind(file1,file2,file3)
final <- final[,sum(count), by = words]
names(final) <- c("words", "count")
final
saveRDS(final, "final_4grams.gzip", compress = "gzip")
rm(file1)
rm(file2)
rm(file3)
gc()
file1<-readRDS("./elab/blogs/blogs3-Grams_final.gzip")
rm(file1)
ls()
rm(final)
gc()
file1<-readRDS("./elab/blogs/blogs3-Grams_final.gzip")
file2<-readRDS("./elab/twitter/twitter3-Grams_final.gzip")
file3<-readRDS("./elab/news/news3-Grams_final.gzip")
final <- rbind(file1,file2,file3)
final <- final[,sum(count), by = words]
names(final) <- c("words", "count")
final
saveRDS(final,"./elab/final_3grams.gzip", compress = "gzip")
source('C:/Program Files/R/workdir/capstone_1.1.R')
splitNGrams(3)
splitNGrams(3)
splitNGrams(3)
source('C:/Program Files/R/workdir/capstone_1.1.R')
source('C:/Program Files/R/workdir/capstone_1.1.R')
splitNGrams(3)
dataSplitClean <- function ( tokenNum = 2)
{
tot <- data.table()
for (i in 1:10)
{
temp <- readRDS( paste("./elab/","final_split_",tokenNum,"-Grams_",i,".gzip", sep = "") )
tot <- rbind(tot, temp)
print(paste(tokenNum,"-Gram fold: ",i,", ", round(object.size(tot)/1024/1024,2)," MB", sep = ""))
rm(temp)
}
saveRDS(tot, file = paste("./elab/","final_split_",tokenNum,"-Grams_tot",".gzip", sep = ""), compress= "gzip")
}
dataSplitClean(3)
rm(list = ls())
file<-readRDS("./elab/final_3grams_red.gzip")
split<-readRDS("./elab/final_split_3-Grams_tot.gzip")
split
cbind(split, file$count)
final<-cbind(split, file$count)
names(final)<- c("W1","W2","W3","count")
saveRDS(final,"./elab/dict_3grams.gzip")
final
rm(file)
rm(split)
final
triTable<- final[,c("W1","W2")]
triTable<- unique(final[,c("W1","W2")])
triTable
words<- unique(final[,c("W3")])
saveRDS(triTable,"./elab/TriTable.gzip")
saveRDS(words,"./elab/triWorkds.gzip")
triTable
final
rm(li)
rm(list = ls())
biWords <- readRDS("./elab/biWords.gzip")
triWords <- readRDS("./elab/triWords.gzip")
triWords <- readRDS("./elab/triWords.gzip")
quadWords <- readRDS("./elab/quadWords.gzip")
biWords
triWords
finalWords<- rbind( biWords$W, triWords$W3, quadWords$W)
biWords$W
biWords
biWords$W
as.data.table(biWords$W)
cbind(as.data.table(biWords$W),as.data.table(triWords$W3))
rbind(as.data.table(biWords$W),as.data.table(triWords$W3))
rbind(as.data.table(biWords$W),as.data.table(triWords$W3), as.data.table(quadWords$W))
finalWords<-rbind(as.data.table(biWords$W),as.data.table(triWords$W3), as.data.table(quadWords$W))
dim(biWords)
dim(triWords)
dim(quadWords)
dim(finalWords)
29472+23217+87508
dim(as.data.table(biWords$W))
dim(as.data.table(triWords$W3))
dim(as.data.table(quadWords$W))
dim(rbind(as.data.table(biWords$W),as.data.table(triWords$W3), as.data.table(quadWords$W)))
29472+23217+23217
29472+34819+23217
finalWords
unique(finalWords$V1)
unique(finalWords[V1])
unique(finalWords[,V1])
unique(finalWords[,"V1"])
finalWords<-unique(finalWords[,"V1"])
finalWords$id<-rownames(finalWords)
finalWords
names(finalWords)<- c("W","id")
finalWords
saveRDS(finalWords,"./elab/finalWords.gzip", compress = "gzip")
biTable<- readRDS("./elab/biTable.gzip")
biTable
test <- data.table()
final
final<-readRDS("./elab/dict_2grams.gzip")
final
words
finalWords
dim(biTable) [1]
test <- data.table()
for (i in 1:dim(biTable) [1])
{
print(paste(i,"over",27908))
res<- final[ W1 == biTable[i,]$W1, c("W2","count")]
test<- rbind( test ,
cbind(2, ##for bitables
biTable[i,]$id, ##id quad)
finalWords[ W %in% res$W2 ]$id, ##id word
res$count
)
)
}
test
saveRDS("./elab/crossBi.gzip", compress = "gzip")
saveRDS(test,"./elab/crossBi.gzip", compress = "gzip")
ls()
biTable
biTable[W1=="bianchi"]
biTable[W1=="bianchi"]$id
test
test[V1==2 & V2=biTable[W1=="bianchi"]$id]
test[V1==2 & V2==biTable[W1=="bianchi"]$id]
finalWords
finalWords[id %in% test[ V1==2 & V2==biTable[W1=="bianchi"]$id ]]
test[ V1==2 & V2==biTable[W1=="bianchi"]$id ]
finalWords[id %in% test[ V1==2 & V2==biTable[W1=="bianchi"]$id ]$V3 ]
finalWords[id %in% test[ V1==2 & V2==biTable[W1=="bistat"]$id ]$V3 ]
biTable
final
final[order(count, decreasing = TRUE)]
finalWords[id %in% test[ V1==2 & V2==biTable[W1=="right"]$id ]$V3 ]
test[ V1==2 & V2==biTable[W1=="right"]$id ]
test[ V1==2 & V2==biTable[W1=="right"]$id ]
test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)]
head(test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)],3)
finalWords[id %in% head(test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)],3)$V3 ]
finalWords[W=="now"]
test[ V1==2 & V2==biTable[W1=="right"]$id ]
tmp<-test[ V1==2 & V2==biTable[W1=="right"]$id  ]
tmp
tmp[V3==120]
final[order(count, decreasing = TRUE)]
final[W1=="right"]
final[W1=="right" & W2=="heard"]
biTable[W1=="right"]
test
test[V2==1801]
tmp<-test[V2==1801]
tmp[order(v4, decreasing = TRUE)]
tmp[order(V4, decreasing = TRUE)]
test
test$V4<- as.numeric(test$V4)
tmp<-test[V2==1801]
tmp[order(V4, decreasing = TRUE)]
finalWrods[id==22]
finalWords[id==22]
finalWords[id %in% head(test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)],3)$V3 ]
final[W1=="right"]
final[W1=="right" & W2=="face"]
final[W1=="right" & W2=="now"]
finalWords[W=="now"]
final[W1=="right" & W2=="face"]
finalWords[W=="face"]
test
test[V1==2 & V3 == 5]
biTable [W1=="right"]
test[V1==2 & V3 == 5 & V2==1801]
test [V2==1801]]
test [V2==1801]
tmp<-test [V2==1801]
tmp[order(V4, decreasing = TRUE)]
final
tmp2<- final[W1=="right"]
tmp2
tmp[order(V4, decreasing = TRUE)]
tmp2[order(count, decreasing = TRUE)]
t1<-head(tmp[order(V4, decreasing = TRUE)])
t2<-head(tmp2[order(count, decreasing = TRUE)])
t1
t2
biTable[W1=="right"]
finalWords[W=="now"]
finalWords[W=="back"]
test
test[V1==2 & V2==1801]
t3<- test[V1==2 & V2==1801]
t3
t3<- t3[order(V4,decreasing = TRUE)]
t3
t3<-head(t3)
t3
biTable[W1=="right"]
biTable[1801,]
biTable[1801,]$W1
res<- final[W1 == biTable[1801,]$W1, c("W2","count")]
res
res[order(count,decreasing = TRUE)]
cbind(2, ##for bitables
biTable[1801,]$id, ##id quad)
finalWords[ W %in% res$W2 ]$id, ##id word
res$count
)
res[order(count,decreasing = TRUE)]
biTable[1801,]$id
finalWords[ W %in% res$W2 ]$id
as.data.table(finalWords[ W %in% res$W2 ]$id)
biTable[1801,]$id
biTable[1801,]$id
res[order(count,decreasing = TRUE)]
res
finalWords[ W %in% res$W2 ]
res$W2
finalWords[ W %in% res$W2 ]
as.data.table[res$W2]
as.data.table(res$W2)
res
finalWords[W==along]
finalWords[W=="along"]
finalWords[id==1]
res
head(apply(res$W2, FUN= function(X){ finalWords[W==X] }))
head(sapply(res$W2, FUN= function(X){ finalWords[W==X] }))
head(sapply(res$W2, FUN= function(X){ finalWords[W==X]$id }))
res
res$id<- sapply(res$W2, FUN= function(X){ finalWords[W==X]$id })
res
finalWords[di==313]
finalWords[id==313]
finalWords[id==1567]
finalWords[W=="now"]
res[id==121]
test <- data.table()
biTable
biTable[W1=="right"]
biTable2<- biTable
biTable<- biTable[W1=="right"]
for (i in 1:dim(biTable) [1])
{
print(paste(i,"over",27908))
res<- final[ W1 == biTable[i,]$W1, c("W2","count")]
res$id<- sapply(res$W2, FUN= function(X){ finalWords[W==X]$id })
test<- rbind( test ,
cbind(2, ##for bitables
biTable[i,]$id, ##id quad)
res$id, ##id word
res$count
)
)
}
test
finalWords[id %in% head(test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)],3)$V3 ]
test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)]
test$V4<-as.numeric(test$V4)
finalWords[id %in% head(test[ V1==2 & V2==biTable[W1=="right"]$id ][order(V4, decreasing = TRUE)],3)$V3 ]
final[W1=="right" & order(count,decreasing = T)]
t1<-final[W1=="right"]
t1[order(count,decreasing = T)]
sub <-"When you breathe, I want to be the air for you. I'll be there for you,I'd live and I'd"
sub
corp <- VCorpus(VectorSource(sub))
corp <- tm_map(corp, content_transformer(function(x) iconv(x, to="UTF-8", sub="byte")))
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, content_transformer(removePunctuation))
corp <- tm_map(corp, content_transformer(removeNumbers))
corp <- tm_map(corp, content_transformer(removeURL))
corp <- tm_map(corp, stripWhitespace)
corp <- tm_map(corp, removeWords, stopwords("english"))
corp <- tm_map(corp, stemDocument)
corp <- tm_map(corp, stripWhitespace)
require(tm)
require(SnowballC)
require(RWeka)
require(stringi)
require(data.table)
sub
source('C:/Program Files/R/workdir/prj/utils.R')
setwd("./prj/")
loadData()
corp <- VCorpus(VectorSource(sub))
corp <- tm_map(corp, content_transformer(function(x) iconv(x, to="UTF-8", sub="byte")))
corp <- tm_map(corp, content_transformer(tolower))
corp <- tm_map(corp, content_transformer(removePunctuation))
corp <- tm_map(corp, content_transformer(removeNumbers))
corp <- tm_map(corp, content_transformer(removeURL))
corp <- tm_map(corp, stripWhitespace)
corp <- tm_map(corp, removeWords, stopwords("english"))
corp <- tm_map(corp, stemDocument)
corp <- tm_map(corp, stripWhitespace)
corp
summary(corp)
corp$`1`
unclass(corp)
corp$content
corp$content[[1]]
corp$content[[1]]$content
corp$content
corp$content[[1]]$meta
corp$content[[1]]$content
getPredictions("corp$content[[1]]$content")
getPredictions(corp$content[[1]]$content)
ls()
getPredictions("about his")
sub<-"Guy at my table's wife got up to go to the bathroom and I asked
about dessert and he started telling me about his"
source('C:/Program Files/R/workdir/prj/utils.R')
sub <-strip(sub)
sub
getPredictions(sub)
sub<-strip("I'd give anything to see arctic monkeys this")
getPredictions(sub)
sub<-strip("monkeys")
sub
biTable
biTable[W1=="monkey"]
getPredictions("monkey")
getPredictions("time to take a")
getPredictions("time to take")
getPredictions("a")
getPredictions("take a")
getPredictions("take")
getPredictions("to take")
getPredictions("time to")
source('C:/Program Files/R/workdir/prj/utils.R')
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions("time to")
getPredictions("time to",10)
getPredictions("time to take a",10)
getPredictions("time to take",10)
getPredictions(strip("time to take",10)
)
getPredictions(strip("time to take"),10)
getPredictions(strip("time to take"),10)
getPredictions(strip("time to take"),5)
getPredictions(strip("helps reduce your"),5)
getPredictions(strip("helps reduce your"),10)
getPredictions(strip("monkeys this"),10)
getPredictions(strip("monkeys this"),100)
getPredictions(strip("monkeys this"),20)
source('C:/Program Files/R/workdir/prj/utils.R')
crossGrams[ gramType==2 & gramID==biTable[W1=="monkey"]$id ][order(count, decreasing = TRUE)]
head( crossGrams[ gramType==2 & gramID==biTable[W1==inW1]$id ][order(count, decreasing = TRUE)], numWords)
head( crossGrams[ gramType==2 & gramID==biTable[W1=="monkey"]$id ][order(count, decreasing = TRUE)], numWords)
head( crossGrams[ gramType==2 & gramID==biTable[W1=="monkey"]$id ][order(count, decreasing = TRUE)], 3)
class(getPredictions(strip("monkeys this"),20))
getPredictions(strip("monkeys this"),20)
c("c","s")
head( crossGrams[ gramType==2 & gramID==biTable[W1=="monkey"]$id ][order(count, decreasing = TRUE)], 3)
temp<-head( crossGrams[ gramType==2 & gramID==biTable[W1=="monkey"]$id ][order(count, decreasing = TRUE)], 3)
temp
dim(temp)
dim(temp)[1]
for (i in dim(temp)[1]) {print(i)}
for (i in (1:dim(temp)[1])) {print(i)}
for (i in (1:dim(temp)[1])) {print(temp[i])}
temp
temp[1]
temp[1]$wordID
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions("monkey")
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions("monkey")
finalWords
finalWords[id==711]
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions("monkey say all what")
getPredictions("monkey say all")
getPredictions("monkey say")
getPredictions("say")
getPredictions("osama bin")
getPredictions("osama")
getPredictions("bin")
getPredictions("osama bin laden")
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions(strip("Talking to your mom has the same effect as a hug and helps
reduce your"))
getPredictions(strip("Talking to your mom has the same effect as a hug and helps
reduce your"),10)
getPredictions(strip("Talking to your mom has the same effect as a hug and helps
reduce your"),20)
getPredictions(strip("Talking to your mom has the same effect as a hug and helps
reduce your"),40)
getPredictions(strip("helps
reduce your"),40)
getPredictions(strip("and helps
reduce your"),40)
getPredictions(strip("hug and helps
reduce your"),40)
sub <-"hug and helps reduce your"
strsplit(sub,split = " ")[[1]]
tail( strsplit(sub,split = " ")[[1]],3)
sub<-strip(sub)
sub
sub1<-strip("and helps reduce your")
sub
sub1
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions(strip("and helps
reduce your"),40)
getPredictions(strip("hug and helps
reduce your"),40)
plit<-tail( strsplit("hug and helps reduce your",split = " ")[[1]],3)
plit
n<-lenght(plit)+1
n<-length(plit)+1
n
plit[1]
plit[n-1]
plit[n-2]
plit[n-3]
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions(strip("and helps
reduce your"),40)
getPredictions(strip("hug and helps
reduce your"),40)
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions(strip("hug and helps
reduce your"),40)
t<-c("1","2","3")
t
tail(t,2)
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions(strip("hug and helps
reduce your"),40)
getPredictions(strip("and helps
reduce your"),40)
source('C:/Program Files/R/workdir/prj/utils.R')
t
t[4]
c( tail(t,2),""()
c( tail(t,2),""()
c( tail(t,2),"")
source('C:/Program Files/R/workdir/prj/utils.R')
getPredictions(strip("and helps
reduce your"),40)
getPredictions(strip("fuck and helps
reduce your"),40)
source('C:/Program Files/R/workdir/prj/utils.R')
shiny::runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
library(shiny)
?shinytheme
?shinytheme
??shinytheme
library(shinythemes)
install.packages("shinythemes")
library(shinythemes)
?shinytheme
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
getPredictions("The sun is")
getPredictions("The sun")
getPredictions("sun")
getPredictions("the sun")
getPredictions("sun")
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
runApp('ds_capstone')
